Solved 5th prob on Day2
1 Using two pass approach
Gave trouble for some time due to int initialization of  maxi and prod
class Solution {
public:
int maxProduct(vector<int>&nums) {
double maxi = INT_MIN;
double prod=1;

    for(int i=0;i<nums.size();i++)
    {
      prod*=nums[i];
      maxi=max(prod,maxi);
      if(prod==0)
       prod=1;
    }
    prod=1;
    for(int i=nums.size()-1;i>=0;i--)
    {
      prod*=nums[i];

      maxi=max(prod,maxi);
      if(prod==0)
       prod=1;
    }
    return (int) maxi;
}
};
2 Using DP
Here we are changing the max and min everytime and giving back the result
class Solution {
public:
    int maxProduct(vector<int>& nums) {
        double maxi=nums[0];
        double mini=nums[0];
        double res=nums[0];
        for(int i=1;i<nums.size();i++){
            if(nums[i]<0){
                swap(maxi,mini);
            }
            maxi=max((double)nums[i],nums[i]*maxi);
            mini=min(mini*nums[i],(double)nums[i]);
            res=max(res,maxi);
        }
        return (int)res;
    }
};
